apiVersion: v1
kind: Service
metadata:
  name: mysql
spec:
  ports:
  - port: 3306
    nodePort: 30306
  selector:
    app: mysql
  type: NodePort
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: mysql-db-config
data:
  school.sql: |
    CREATE DATABASE school;
    USE school;
    CREATE TABlE students (name VARCHAR(255), age INT(10));
    INSERT INTO students (name, age) VALUES ('Nikos', 10), ('Maria', 8), ('Vrasidas', 6), ('Eva', 11);
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: mysql-pv
spec:
  storageClassName: manual
  capacity:
    storage: 1Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: "/mnt/data"
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mysql-pvc
spec:
  storageClassName: manual
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql-cm-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      component: mysql
  template:    # pod template
    metadata:
      labels:
        component: mysql
    spec:     
      containers:   # container specification
        - name: mysql 
          image: mysql  
          ports:
            - containerPort: 3306
          volumeMounts:
            - name: mysql-dbinit
              mountPath: /docker-entrypoint-initdb.d
            - name: mysql-data
              mountPath: /var/lib/mysql
          env:
            - name: MYSQL_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mysqlpass
                  key: MYSQL_ROOT_PASSWORD # secret created using > kubectl create secret generic mysqlpass --from-literal MYSQL_ROOT_PASSWORD='r00t!@#$'
            - name: MYSQL_DATABASE
              value: "school"
      volumes:
        - name: mysql-dbinit
          configMap:
            name: mysql-db-config  # value from .medata.name of the myqsl-configmap.yaml file
        - name: mysql-data
          persistentVolumeClaim:
            claimName: mysql-pvc # mysql-pv-claim #